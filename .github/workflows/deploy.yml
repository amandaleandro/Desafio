name: Deploy Infrastructure and Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: 'us-east-1'
  KUBE_CONFIG_PATH: '/home/runner/.kube/config'
  
jobs:
  terraform:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Output ECR Repository URL
        working-directory: ./terraform
        run: echo "ECR URL: $(terraform output ecr_repository_url)"

 build-and-push:
  name: Build and Push Docker Image to ECR
  runs-on: ubuntu-latest
  needs: terraform

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Verify if ECR repository exists
      run: |
        REPO_NAME=$(terraform output -raw ecr_repository_name)
        aws ecr describe-repositories --repository-names $REPO_NAME || \
        aws ecr create-repository --repository-name $REPO_NAME

    - name: Build, Tag and Push Docker image
      run: |
        REPO_URL=$(terraform output -raw ecr_repository_url)
        docker build -t helloworld-app:latest .
        docker tag helloworld-app:latest $REPO_URL:latest
        docker push $REPO_URL:latest


  deploy-kubernetes:
    name: Deploy Application to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.22.0

      - name: Update kubeconfig
        run: |
          aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name eks-cluster

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
